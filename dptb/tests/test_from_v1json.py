import pytest
from dptb.nn.build import build_model
from dptb.postprocess.bandstructure.band import Band
import os
from pathlib import Path
import numpy as np

rootdir = os.path.join(Path(os.path.abspath(__file__)).parent, "data")

class TestV1Jsonuniform:
    run_opt = {
            "init_model": f"{rootdir}/json_model/AlAs_v1_nnsk_b5.200_c4.200_w0.200.json",
            "restart": None,
            "freeze": False,
            "train_soc": False,
            "log_path": None,
            "log_level": None
        }

    model_option = {
        "nnsk": {
            "onsite": {"method": "uniform"},
            "hopping": {"method": "powerlaw", "rs":4.2, "w": 0.2},
            "soc":{},
            "push": False,
            "freeze": False
        }
    }
    common_options = {
    "basis": {
        "As": ["4s","4p","d*"],
        "Al": ["3s","3p","d*"]
    },
    "device": "cpu",
    "dtype": "float32",
    "overlap": False
    }

    jdata={   
    "task_options": {
        "task": "band",
        "kline_type":"abacus",
        "kpath":[[0.0000000000,   0.0000000000,   0.0000000000,   2],   
                 [0.5000000000,   0.0000000000,   0.5000000000,   2],               
                 [0.6250000000,   0.2500000000,   0.6250000000,   1],    
                 [0.3750000000,   0.3750000000,   0.7500000000,   2],     
                 [0.0000000000,   0.0000000000,   0.0000000000,   2],    
                 [0.5000000000,   0.5000000000,   0.5000000000,   2],                
                 [0.5000000000,   0.2500000000,   0.7500000000,   2],               
                 [0.5000000000,   0.0000000000,   0.5000000000,   1 ]
                 ],
        "klabels":['G','X','U','K','G','L','W','X'],
        "E_fermi":-9.307,
        "emin":-15,
        "emax":10    }
    }
       

    def test_bands(self):
        model = build_model(self.run_opt["init_model"], self.model_option, self.common_options)
 
        kpath_kwargs = self.jdata["task_options"]
        bcal = Band(model=model, 
            use_gui=True, 
            results_path=f'{rootdir}/out', 
            device=model.device)

        stru_data = f"{rootdir}/json_model/AlAs.vasp"
        eigenstatus = bcal.get_bands(data=stru_data, 
               kpath_kwargs=kpath_kwargs)
        
        expected_bands =np.array([[-2.48738842e+01, -1.29387579e+01, -1.29387531e+01,
        -1.29387484e+01, -1.10866852e+01, -8.07882595e+00,
        -8.07881832e+00, -8.07881737e+00,  9.56978989e+00,
         9.56979179e+00,  1.25314865e+01,  1.25314980e+01,
         1.25315008e+01,  4.23717499e+01,  4.23717537e+01,
         4.32215462e+01,  4.32215538e+01,  4.32215614e+01],
       [-2.41191730e+01, -1.61150684e+01, -1.42791767e+01,
        -1.42791719e+01, -1.03606348e+01, -8.68642616e+00,
        -5.90601444e+00, -5.90600967e+00,  2.25788760e+00,
         5.51916361e+00,  5.51916647e+00,  5.61485243e+00,
         5.91050625e+00,  2.50469570e+01,  2.82641335e+01,
         2.82641392e+01,  2.84246483e+01,  3.07487679e+01],
       [-2.29339600e+01, -1.85236092e+01, -1.51975479e+01,
        -1.51975431e+01, -1.13508320e+01, -1.05211630e+01,
        -2.21044850e+00, -2.21044683e+00, -3.01877409e-01,
        -3.01874220e-01, -5.50282327e-03,  8.32842171e-01,
         1.85165548e+00,  7.89621782e+00,  1.01784697e+01,
         1.01784744e+01,  1.34970484e+01,  1.40907288e+01],
       [-2.29477081e+01, -1.84168339e+01, -1.56979408e+01,
        -1.50834084e+01, -1.10056238e+01, -9.68981457e+00,
        -2.91448879e+00, -2.63903880e+00, -1.43107760e+00,
        -4.35178548e-01,  1.01621652e+00,  1.08422828e+00,
         3.61865139e+00,  7.17336273e+00,  9.30155849e+00,
         1.00361338e+01,  1.38237772e+01,  1.42762747e+01],
       [-2.30109749e+01, -1.81430511e+01, -1.63737125e+01,
        -1.47896776e+01, -1.06530704e+01, -7.59097767e+00,
        -4.40895557e+00, -4.01798630e+00, -1.59009695e+00,
        -8.00317004e-02,  1.07963777e+00,  2.36884308e+00,
         6.40078640e+00,  6.44294930e+00,  8.05769444e+00,
         1.10569324e+01,  1.42315102e+01,  1.53139381e+01],
       [-2.30109730e+01, -1.81430492e+01, -1.63737125e+01,
        -1.47896767e+01, -1.06530619e+01, -7.59097576e+00,
        -4.40895939e+00, -4.01798677e+00, -1.59010005e+00,
        -8.00331011e-02,  1.07963753e+00,  2.36884212e+00,
         6.40078783e+00,  6.44294262e+00,  8.05769157e+00,
         1.10569296e+01,  1.42315063e+01,  1.53139343e+01],
       [-2.40614185e+01, -1.67648468e+01, -1.50328369e+01,
        -1.34554472e+01, -9.01719761e+00, -7.44597864e+00,
        -7.16829062e+00, -6.34035254e+00,  2.99600887e+00,
         3.46569014e+00,  4.46293497e+00,  5.20906973e+00,
         7.81929064e+00,  2.53426857e+01,  2.59447289e+01,
         2.75785408e+01,  2.84667950e+01,  2.92152786e+01],
       [-2.48738842e+01, -1.29387579e+01, -1.29387531e+01,
        -1.29387484e+01, -1.10866852e+01, -8.07882595e+00,
        -8.07881832e+00, -8.07881737e+00,  9.56978989e+00,
         9.56979179e+00,  1.25314865e+01,  1.25314980e+01,
         1.25315008e+01,  4.23717499e+01,  4.23717537e+01,
         4.32215462e+01,  4.32215538e+01,  4.32215614e+01],
       [-2.43795700e+01, -1.64551907e+01, -1.34434357e+01,
        -1.34434280e+01, -1.03514872e+01, -7.39513445e+00,
        -7.39513063e+00, -6.10492849e+00,  4.66958141e+00,
         4.66959238e+00,  6.74782705e+00,  6.74782896e+00,
         9.39744949e+00,  3.10566292e+01,  3.10566330e+01,
         3.17376080e+01,  3.17376156e+01,  3.35952110e+01],
       [-2.35389977e+01, -1.85056343e+01, -1.37990303e+01,
        -1.37990227e+01, -1.08380346e+01, -7.56264687e+00,
        -7.56264400e+00, -3.32416415e+00, -5.02199292e-01,
        -5.02196670e-01,  4.68519068e+00,  4.68519211e+00,
         7.63819790e+00,  1.68208370e+01,  1.68208504e+01,
         2.04270325e+01,  2.04270401e+01,  2.11967201e+01],
       [-2.31957893e+01, -1.82630310e+01, -1.56345882e+01,
        -1.44928350e+01, -9.23434162e+00, -7.92852402e+00,
        -5.95022917e+00, -4.99064732e+00, -1.32462871e+00,
        -5.02915382e-01,  2.95047784e+00,  4.62426805e+00,
         5.43929529e+00,  1.17566347e+01,  1.19293985e+01,
         1.50316639e+01,  1.79418583e+01,  1.80968723e+01],
       [-2.29426270e+01, -1.80574532e+01, -1.62369022e+01,
        -1.56748543e+01, -8.22931576e+00, -7.16701651e+00,
        -6.62407303e+00, -5.73891783e+00, -1.48577607e+00,
         1.81063569e+00,  2.45844960e+00,  3.85335517e+00,
         4.23286629e+00,  5.92695141e+00,  6.44531107e+00,
         8.21370125e+00,  1.44566507e+01,  1.44983978e+01],
       [-2.29406662e+01, -1.83379650e+01, -1.57140999e+01,
        -1.54625340e+01, -1.01433325e+01, -9.37792110e+00,
        -4.06694746e+00, -3.25191188e+00, -1.23258555e+00,
        -4.15170372e-01,  1.20202124e+00,  2.69886231e+00,
         3.94393396e+00,  6.43281651e+00,  8.37365723e+00,
         9.67361927e+00,  1.41347656e+01,  1.42384768e+01],
       [-2.29339600e+01, -1.85236092e+01, -1.51975479e+01,
        -1.51975431e+01, -1.13508320e+01, -1.05211630e+01,
        -2.21044850e+00, -2.21044683e+00, -3.01877409e-01,
        -3.01874220e-01, -5.50282327e-03,  8.32842171e-01,
         1.85165548e+00,  7.89621782e+00,  1.01784697e+01,
         1.01784744e+01,  1.34970484e+01,  1.40907288e+01]], dtype=np.float32)
        assert np.allclose(eigenstatus["eigenvalues"], expected_bands, atol=1e-4)



class TestV1Jsonstrain:
    run_opt = {
            "init_model": f"{rootdir}/json_model/Si_v1_nnsk_b2.600_c2.600_w0.300.json",
            "restart": None,
            "freeze": False,
            "train_soc": False,
            "log_path": None,
            "log_level": None
        }

    model_option = {
        "nnsk": {
        "onsite": {"method": "strain","rs":6, "w": 0.1},
        "hopping": {"method": "powerlaw", "rs":2.6, "w": 0.3},
        "soc":{},
        "push": False,
        "freeze": False
        }
    }
    common_options = {
    "basis": {
    "Si": ["3s","3p","d*"]
    },
    "device": "cpu",
    "dtype": "float32",
    "overlap": False
    }

    jdata={   
    "task_options": {
        "task": "band",
        "kline_type":"abacus",
        "kpath":[[0.0000000000,  0.0000000000,   0.0000000000,   2],   
                [0.5000000000,   0.0000000000,   0.5000000000,   2],               
                [0.6250000000,   0.2500000000,   0.6250000000,   1],    
                [0.3750000000,   0.3750000000,   0.7500000000,   2],     
                [0.0000000000,   0.0000000000,   0.0000000000,   2],    
                [0.5000000000,   0.5000000000,   0.5000000000,   2],                
                [0.5000000000,   0.2500000000,   0.7500000000,   2],               
                [0.5000000000,   0.0000000000,   0.5000000000,   1 ]
                ],
        "klabels":["G","X","X/U","K","G","L","W","X"],
        "E_fermi":-9.307,
        "emin":-15,
        "emax":10    }
    }
       

    def test_bands(self):
        model = build_model(self.run_opt["init_model"], self.model_option, self.common_options)
 
        kpath_kwargs = self.jdata["task_options"]
        bcal = Band(model=model, 
            use_gui=True, 
            results_path=f'{rootdir}/out', 
            device=model.device)

        stru_data = f"{rootdir}/json_model/silicon.vasp"

        eigenstatus = bcal.get_bands(data=stru_data, 
               kpath_kwargs=kpath_kwargs)
        expected_bands = np.array([[-28.032394  , -12.518021  ,  -8.789028  ,  -8.789027  ,
                                     -8.78902   ,  -6.074078  ,  -6.074069  ,  -6.0740604 ,
                                     17.192019  ,  17.192028  ,  22.030336  ,  22.030338  ,
                                     22.03035   ,  23.343376  ,  23.343376  ,  23.343384  ,
                                     28.18668   ,  28.186697  ],
                                   [-26.710665  , -17.258825  , -11.786415  , -11.786402  ,
                                     -6.316819  ,  -6.08972   ,  -2.2474113 ,  -2.2474105 ,
                                     15.599638  ,  18.773561  ,  20.637032  ,  21.751331  ,
                                     21.751333  ,  22.788795  ,  22.788813  ,  26.043669  ,
                                     26.558607  ,  29.842487  ],
                                   [-22.908417  , -22.90841   , -13.267318  , -13.267316  ,
                                     -5.855864  ,  -5.8558598 ,   0.13847035,   0.13847637,
                                     17.0159    ,  17.0159    ,  21.383863  ,  21.383865  ,
                                     22.246996  ,  22.247007  ,  22.64281   ,  22.642822  ,
                                     29.825714  ,  29.825722  ],
                                   [-23.125595  , -22.677975  , -13.552594  , -13.126421  ,
                                     -6.040592  ,  -5.239112  ,  -0.16200367,   0.15783598,
                                     17.022974  ,  17.076164  ,  20.278925  ,  21.015097  ,
                                     21.579382  ,  22.268646  ,  23.596603  ,  24.191101  ,
                                     29.491728  ,  29.689163  ],
                                   [-23.748362  , -21.997149  , -13.956201  , -12.712631  ,
                                     -6.524768  ,  -3.9821868 ,  -0.98925126,   0.1548973 ,
                                     17.227066  ,  17.242361  ,  18.778227  ,  20.15013   ,
                                     22.017757  ,  22.306322  ,  24.653385  ,  25.92878   ,
                                     28.555614  ,  29.325285  ],
                                   [-23.748354  , -21.997162  , -13.956195  , -12.712616  ,
                                     -6.5247726 ,  -3.9821932 ,  -0.98925066,   0.15489526,
                                     17.22706   ,  17.242352  ,  18.778234  ,  20.150133  ,
                                     22.017756  ,  22.306314  ,  24.653393  ,  25.928793  ,
                                     28.555605  ,  29.325268  ],
                                   [-26.629864  , -17.600563  , -12.377507  , -10.340946  ,
                                     -8.252066  ,  -4.5056643 ,  -3.1107721 ,  -1.5953344 ,
                                     16.209995  ,  17.483477  ,  20.519865  ,  21.010235  ,
                                     22.459747  ,  22.790142  ,  24.399433  ,  24.6775    ,
                                     28.152231  ,  28.817282  ],
                                   [-28.032394  , -12.518021  ,  -8.789028  ,  -8.789027  ,
                                     -8.78902   ,  -6.074078  ,  -6.074069  ,  -6.0740604 ,
                                     17.192019  ,  17.192028  ,  22.030336  ,  22.030338  ,
                                     22.03035   ,  23.343376  ,  23.343376  ,  23.343384  ,
                                     28.18668   ,  28.186697  ],
                                   [-27.095016  , -16.587624  , -10.282119  , -10.282109  ,
                                     -9.392605  ,  -4.47474   ,  -4.4747334 ,  -2.0351746 ,
                                     16.790812  ,  16.79082   ,  21.469982  ,  21.469984  ,
                                     22.261318  ,  23.112501  ,  23.889814  ,  23.889832  ,
                                     28.476255  ,  28.476261  ],
                                   [-25.650513  , -19.811338  , -11.168917  , -11.168911  ,
                                     -9.854099  ,  -3.526547  ,  -3.5265448 ,   0.52536994,
                                     17.867775  ,  17.86778   ,  18.799477  ,  18.799482  ,
                                     22.678572  ,  22.67859   ,  25.41526   ,  25.415262  ,
                                     28.463633  ,  28.463642  ],
                                   [-24.895058  , -20.650934  , -13.44941   , -12.120061  ,
                                     -7.257396  ,  -3.5902717 ,  -2.117014  ,   0.15689819,
                                     17.095425  ,  17.784517  ,  18.656044  ,  19.36713   ,
                                     22.366032  ,  22.408947  ,  25.288326  ,  26.88247   ,
                                     27.520784  ,  28.909798  ],
                                   [-22.888115  , -22.888107  , -13.577753  , -13.577752  ,
                                     -5.001314  ,  -5.0013084 ,  -0.38720337,  -0.38719827,
                                     17.119455  ,  17.11947   ,  19.495407  ,  19.495422  ,
                                     21.823872  ,  21.823875  ,  25.932095  ,  25.9321    ,
                                     28.705719  ,  28.705719  ],
                                   [-22.898304  , -22.898302  , -13.427348  , -13.427342  ,
                                     -5.4427934 ,  -5.442793  ,  -0.10512064,  -0.10511683,
                                     17.060398  ,  17.060402  ,  20.222359  ,  20.222364  ,
                                     21.842312  ,  21.842323  ,  24.5921    ,  24.5921    ,
                                     29.378563  ,  29.378567  ],
                                   [-22.908417  , -22.90841   , -13.267318  , -13.267316  ,
                                     -5.855864  ,  -5.8558598 ,   0.13847035,   0.13847637,
                                     17.0159    ,  17.0159    ,  21.383863  ,  21.383865  ,
                                     22.246996  ,  22.247007  ,  22.64281   ,  22.642822  ,
                                     29.825714  ,  29.825722  ]])
        assert np.allclose(eigenstatus["eigenvalues"], expected_bands, atol=1e-4)